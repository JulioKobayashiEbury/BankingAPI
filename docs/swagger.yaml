openapi: 3.0.0
servers:
  - url: localhost:25565
info:
  description: An API used to do banking operations such as user register, withdrawl, deposit, access control, internal and external accounts transfers, account blocking and more.
  version: "1.0.0"
  title: "Simple Banking API"
  contact:
    email: julio.kobayashi@ebury.com
  license:
    name: Apache 2.0
    url: "[http://www.apache.org/licenses/LICENSE-2.0.html](http://www.apache.org/licenses/LICENSE-2.0.html)"
tags:
  - name: users
    description: User related functions
  - name: clients
    description: Client related functions
  - name: accounts
    description: Account related functions
  - name: transfers
    description: Transfer related functions
  - name: deposits
    description: Deposit related functions
  - name: withdrawals
    description: Withdrawal related functions
  - name: automaticdebits
    description: Automatic Debit related functions

paths:
  /users:
    post:
      tags:
        - users
      summary: creates user with info passed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: user created sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad input parameter
        "500":
          description: Internal Server Error

  /users/auth:
    put:
      tags:
        - users
      summary: authenticates a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                password:
                  type: string
      responses:
        "202":
          description: User Authorized
          headers:
            Authorization:
              schema:
                type: string
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /users/{user_id}:
    get:
      tags:
        - users
      summary: return data of user with ID userID
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: user returned succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    delete:
      tags:
        - users
      summary: delete user of userID
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    put:
      tags:
        - users
      summary: update a given piece of information of a certain user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: User updated sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /users/{user_id}/report:
    get:
      tags:
        - users
      summary: returns a report of the user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Report returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReport'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /users/{user_id}/block:
    put:
      tags:
        - users
      summary: block a user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User Blocked
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /users/{user_id}/unblock:
    put:
      tags:
        - users
      summary: unblock a user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User Unblocked
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /clients:
    post:
      tags:
        - clients
      summary: creates a client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        "200":
          description: client created sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        "400":
          description: bad input parameter
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /clients/{client_id}:
    get:
      tags:
        - clients
      summary: return data of client with ID clientID
      parameters:
        - in: path
          name: client_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: client returned sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    delete:
      tags:
        - clients
      summary: delete client of clientID
      parameters:
        - in: path
          name: client_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Client deleted seccesfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    put:
      tags:
        - clients
      summary: update a given piece of information of a certain client
      parameters:
        - in: path
          name: client_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        "200":
          description: Client updated sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /clients/{client_id}/report:
    get:
      tags:
        - clients
      summary: returns a report of the client
      parameters:
        - in: path
          name: client_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Report returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientReport'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /clients/{client_id}/block:
    put:
      tags:
        - clients
      summary: block a client
      parameters:
        - in: path
          name: client_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Client Blocked
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /clients/{client_id}/unblock:
    put:
      tags:
        - clients
      summary: unblock a client
      parameters:
        - in: path
          name: client_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Client Unblocked
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /accounts:
    post:
      tags:
        - accounts
      summary: creates an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "201":
          description: Account created sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: bad input parameter
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /accounts/{account_id}:
    get:
      tags:
        - accounts
      summary: return data of account with ID accountID
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: account returned sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    delete:
      tags:
        - accounts
      summary: delete account of accountID
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Account Deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    put:
      tags:
        - accounts
      summary: update a given piece of information of a certain account
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "200":
          description: Account updated sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /accounts/report/{account_id}:
    get:
      tags:
        - accounts
      summary: returns a report of the account
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Report returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReport'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /accounts/{account_id}/block:
    put:
      tags:
        - accounts
      summary: block an account
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Account Blocked Sucesfully!
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /accounts/{account_id}/unblock:
    put:
      tags:
        - accounts
      summary: unblock an account
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Account Unblocked
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /transfers:
    post:
      tags:
        - transfers
      summary: creates a transfer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        "200":
          description: Transfer created sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /transfers/{transfer_id}:
    get:
      tags:
        - transfers
      summary: return data of transfer with ID transferID
      parameters:
        - in: path
          name: transfer_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: transfer returned sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    delete:
      tags:
        - transfers
      summary: delete transfer of transferID
      parameters:
        - in: path
          name: transfer_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Transfer deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /deposits:
    post:
      tags:
        - deposits
      summary: creates a deposit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deposit'
      responses:
        "201":
          description: Deposit created sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposit'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /deposits/{deposit_id}:
    get:
      tags:
        - deposits
      summary: return data of deposit with ID depositID
      parameters:
        - in: path
          name: deposit_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: deposit returned sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposit'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    delete:
      tags:
        - deposits
      summary: delete deposit of depositID
      parameters:
        - in: path
          name: deposit_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Deposit deleted succesfully!
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /withdrawals:
    post:
      tags:
        - withdrawals
      summary: creates a withdrawal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdrawal'
      responses:
        "201":
          description: Withdrawal created sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawal'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /withdrawals/{withdrawal_id}:
    get:
      tags:
        - withdrawals
      summary: return data of withdrawal with ID withdrawalID
      parameters:
        - in: path
          name: withdrawal_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: withdrawal returned sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawal'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    delete:
      tags:
        - withdrawals
      summary: delete withdrawal of withdrawalID
      parameters:
        - in: path
          name: withdrawal_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Withdrawal Deleted!
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /autodebits:
    post:
      tags:
        - automaticdebits
      summary: creates a automatic debit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticDebit'
      responses:
        "202":
          description: Automatic debit created sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticDebit'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

  /autodebits/{debit_id}:
    get:
      tags:
        - automaticdebits
      summary: return data of automatic debit with ID debit_id
      parameters:
        - in: path
          name: debit_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: automatic debit returned sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticDebit'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
    delete:
      tags:
        - automaticdebits
      summary: delete automatic debit of debit_id
      parameters:
        - in: path
          name: debit_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Automatic debit deleted successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
        name:
          type: string
        document:
          type: string
        password:
          type: string
        register_date:
          type: string
          format: date-time
        status:
          type: boolean
    Client:
      type: object
      properties:
        client_id:
          type: string
        user_id:
          type: string
        name:
          type: string
        document:
          type: string
        register_date:
          type: string
          format: date-time
        status:
          type: boolean
    Account:
      type: object
      properties:
        account_id:
          type: string
        client_id:
          type: string
        user_id:
          type: string
        agency_id:
          type: integer
          format: uint32
        register_date:
          type: string
          format: date-time
        balance:
          type: number
          format: float64
        status:
          type: boolean
    Transfer:
      type: object
      properties:
        transfer_id:
          type: string
        account_id:
          type: string
        account_to:
          type: string
        value:
          type: number
          format: float64
        register_date:
          type: string
          format: date-time
    Deposit:
      type: object
      properties:
        deposit_id:
          type: string
        account_id:
          type: string
        client_id:
          type: string
        user_id:
          type: string
        agency_id:
          type: integer
          format: uint32
        deposit:
          type: number
          format: float64
        deposit_date:
          type: string
          format: date-time
    Withdrawal:
      type: object
      properties:
        withdrawal_id:
          type: string
        account_id:
          type: string
        client_id:
          type: string
        agency_id:
          type: integer
          format: uint32
        withdrawal:
          type: number
          format: float64
        withdrawal_date:
          type: string
          format: date-time
        status:
          type: boolean
    AutomaticDebit:
      type: object
      properties:
        debit_id:
          type: string
        account_id:
          type: string
        client_id:
          type: string
        agency_id:
          type: integer
          format: uint32
        value:
          type: number
          format: float64
        debit_day:
          type: integer
          format: uint16
        status:
          type: boolean
        expiration_date:
          type: string
          format: date-time
        register_date:
          type: string
          format: date-time
    UserReport:
      type: object
      properties:
        user_id:
          type: string
        name:
          type: string
        document:
          type: string
        register_date:
          type: string
          format: date-time
        status:
          type: boolean
        clients:
          type: array
          items:
            $ref: '#/components/schemas/Client'
        report_date:
          type: string
          format: date-time
    ClientReport:
      type: object
      properties:
        client_id:
          type: string
        user_id:
          type: string
        name:
          type: string
        document:
          type: string
        register_date:
          type: string
          format: date-time
        status:
          type: boolean
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        report_date:
          type: string
          format: date-time
    AccountReport:
      type: object
      properties:
        account_id:
          type: string
        client_id:
          type: string
        agency_id:
          type: integer
          format: uint32
        balance:
          type: number
          format: float64
        register_date:
          type: string
          format: date-time
        status:
          type: boolean
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
        deposits:
          type: array
          items:
            $ref: '#/components/schemas/Deposit'
        withdrawals:
          type: array
          items:
            $ref: '#/components/schemas/Withdrawal'
        automatic_debits:
          type: array
          items:
            $ref: '#/components/schemas/AutomaticDebit'
        report_date:
          type: string
          format: date-time
@startuml
note top
    Complete Authentication Sequence before following this diagram
end note

participant accountOwner as accountOwner
boundary accountHandler as accountHandler
boundary userHandler as userHandler
entity account as account
entity transfer as transfer
control service as service
control repository as repository
database firestore as firestore

accountOwner -> accountHandler : /accounts/transfer
accountHandler -> accountHandler : AccountPutTransferHandler
accountHandler -> userHandler : userAuthorization
userHandler -> service : Authorize
service -> userHandler : http.Claims, http.Cookie
userHandler -> accountHandler : string

accountHandler -> service : ProcessNewTransfer
service -> account : Get
account -> repository : GetFireStoreClient
repository -> firestore : NewClient
firestore -> repostitory : firestore.Client
repository -> account : firestore.Client
account -> firestore : .Collection().Doc().Get()
firestore -> account : firestore.DocumentSnapshot
account -> service : account.AccountResponse

service -> account : Get
account -> repository : GetFireStoreClient
repository -> firestore : NewClient
firestore -> repostitory : firestore.Client
repository -> account : firestore.Client
account -> firestore : .Collection().Doc().Get()
firestore -> account : firestore.DocumentSnapshot
account -> service : account.AccountResponse

service -> transfer : Create
transfer -> repository : GetFireStoreClient
repository -> firestore : NewClient
firestore -> repostitory : firestore.Client
repository -> transfer : firestore.Client
transfer -> firestore : .Collection().Add()
firestore -> transfer : firestore.DocumentRef
transfer -> service : transfer.TransferResponse

service -> repository : UpdateTypesDB
repository -> repository : GetFireStoreClient
repository -> firestore : NewClient
repository -> repository : firestore.Client
repository -> firestore : Get
repository -> firestore : Update
repository -> service : model.Erro

service -> account : AddUpdate()
service -> account : Update()
alt Error
service -> transfer : Delete()
end

service -> account : AddUpdate()
service -> account : AddUpdate()
service -> account : Update()
alt Error
service -> account : AddUpdate()
service -> account : Update()
alt No Error
account -> transfer : Delete()
end
end

service -> accountHandler : model.Erro
alt No Error
accountHandler -> accountOwner : http.StatusOK
else Error
accountHandler -> accountOwner : http.(ApropriateErrorCode)
end

@enduml
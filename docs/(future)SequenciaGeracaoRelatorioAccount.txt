@startuml
note top
    Complete Authentication Sequence before following this diagram
end note

participant AccountOwner as AccountOwner
boundary AccountHandler as AccountHandler
control Service as Service
control Repository as Repository
database Firestore as Firestore

AccountOwner -> AccountHandler : /accounts/reports
AccountHandler -> AccountHandler : AccountGetReportHandler

AccountHandler -> AccountHandler : accountAuthorization
AccountHandler -> Service : Authorize
Service -> AccountHandler : model.Claims,model.Erro,http.Cookie
AccountHandler ->  AccountHandler : string,model.Erro

AccountHandler -> Service : GenerateReportByAccount
Service -> Service : Account
Service -> Repository : GetTypeFromDB
Repository -> Repository : GetFireStoreClient
Repository -> Firestore : NewClient
Firestore -> Repository : firestore.Client
Repository -> Repository : firestore.Client
Repository -> Firestore : .Collection().Documents()
Firestore -> Repository : firestore.DocumentIterator
Repository -> Service : []firestore.DocumentSnapshot
Service -> Service : model.AccountReponse

Service -> Service : GetAllTransfers
Service -> Repository : GetTypeFromDB
Repository -> Repository : GetFireStoreClient
Repository -> Firestore : NewClient
Firestore -> Repository : firestore.Client
Repository -> Repository : firestore.Client
Repository -> Firestore : .Collection().Documents()
Firestore -> Repository : firestore.DocumentIterator
Repository -> Service : []firestore.DocumentSnapshot
Service -> Service : []model.TransferRequest

Service -> Service : GetAllAutoDebits
Service -> Repository : GetTypeFromDB
Repository -> Repository : GetFireStoreClient
Repository -> Firestore : NewClient
Firestore -> Repository : firestore.Client
Repository -> Repository : firestore.Client
Repository -> Firestore : .Collection().Documents()
Firestore -> Repository : firestore.DocumentIterator
Repository -> Service : []firestore.DocumentSnapshot
Service -> Service : []model.AutomaticDebitResponse

Service -> Service : GetAllWithdrawals
Service -> Repository : GetTypeFromDB
Repository -> Repository : GetFireStoreClient
Repository -> Firestore : NewClient
Firestore -> Repository : firestore.Client
Repository -> Repository : firestore.Client
Repository -> Firestore : .Collection().Documents()
Firestore -> Repository : firestore.DocumentIterator
Repository -> Service : []firestore.DocumentSnapshot
Service -> Service : []model.WithdrawalRequest

Service -> Service : GetAllDeposits
Service -> Repository : GetTypeFromDB
Repository -> Repository : GetFireStoreClient
Repository -> Firestore : NewClient
Firestore -> Repository : firestore.Client
Repository -> Repository : firestore.Client
Repository -> Firestore : .Collection().Documents()
Firestore -> Repository : firestore.DocumentIterator
Repository -> Service : []firestore.DocumentSnapshot
Service -> Service : []model.DepositRequest

Service -> AccountHandler : model.AccountReport
AccountHandler -> AccountOwner : JSON(http.StatusOK,model.Report)


@enduml
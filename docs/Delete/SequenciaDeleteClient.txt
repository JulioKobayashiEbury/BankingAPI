@startuml
title Delete Client - DELETE /clients/:client_id

actor Requester
boundary ClientDeleteHandler <<clientHandler.go>>
control AuthorizeService <<serviceAuthorize.go>>
control DeleteService <<serviceDeleteTypes.go>>
entity ClientFirestore <<model/client/firestore.go>>

activate Requester 

Requester -> ClientDeleteHandler : DELETE /clients/:client_id
activate ClientDeleteHandler

ClientDeleteHandler -> AuthorizeService : Authorize(Cookie)
activate AuthorizeService
AuthorizeService -->> ClientDeleteHandler : Claims / Error
deactivate AuthorizeService

alt Authorization Failed
    ClientDeleteHandler -->> Requester : HTTP Error Response
else Authorization Succeeded
    ClientDeleteHandler -> ClientFirestore : clientDatabase := NewClientFirestore(DatabaseClient)
    activate ClientFirestore
    ClientFirestore -->> ClientDeleteHandler : clientDatabase
    deactivate ClientFirestore
    
    ClientDeleteHandler -> DeleteService : deleteService := NewDeleteService(nil, clientDatabase, nil)
    activate DeleteService
    DeleteService -->> ClientDeleteHandler : deleteService
    deactivate DeleteService

    ClientDeleteHandler -> DeleteService : ClientDelete(clientID_from_path)
    activate DeleteService
    DeleteService -> ClientFirestore : Delete(&clientID_from_path)
    activate ClientFirestore
    ClientFirestore -->> DeleteService : nil / Error
    deactivate ClientFirestore
    
    alt Delete Client Failed
        DeleteService -->> ClientDeleteHandler : Error
        ClientDeleteHandler -->> Requester : HTTP Error Response
    else Delete Client Succeeded
        DeleteService -->> ClientDeleteHandler : nil
        ClientDeleteHandler -->> Requester : HTTP 200 OK (Message: Client deleted seccesfully)
    end
    deactivate DeleteService
end
deactivate ClientDeleteHandler

deactivate Requester
@enduml
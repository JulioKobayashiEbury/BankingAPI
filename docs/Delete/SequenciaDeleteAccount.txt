@startuml
title Delete Account - DELETE /accounts/:account_id

actor Requester
boundary AccountDeleteHandler <<accountHandler.go>>
control AuthorizeService <<serviceAuthorize.go>>
control DeleteService <<serviceDeleteTypes.go>>
entity AccountFirestore <<model/account/firestore.go>>

activate Requester

Requester -> AccountDeleteHandler : DELETE /accounts/:account_id

activate AccountDeleteHandler

AccountDeleteHandler -> AuthorizeService : Authorize(Cookie)
activate AuthorizeService
AuthorizeService -->> AccountDeleteHandler : Claims / Error
deactivate AuthorizeService

alt Authorization Failed
    AccountDeleteHandler -->> Requester : HTTP Error Response
else Authorization Succeeded
    AccountDeleteHandler -> AccountFirestore : accountDatabase := NewAccountFirestore(DatabaseClient)
    activate AccountFirestore
    AccountFirestore -->> AccountDeleteHandler : accountDatabase
    deactivate AccountFirestore
    
    AccountDeleteHandler -> DeleteService : deleteService := NewDeleteService(nil, nil, accountDatabase)
    activate DeleteService
    DeleteService -->> AccountDeleteHandler : deleteService
    deactivate DeleteService

    AccountDeleteHandler -> DeleteService : AccountDelete(accountID_from_path)
    activate DeleteService
    DeleteService -> AccountFirestore : Delete(&accountID_from_path)
    activate AccountFirestore
    AccountFirestore -->> DeleteService : nil / Error
    deactivate AccountFirestore
    
    alt Delete Account Failed
        DeleteService -->> AccountDeleteHandler : Error
        AccountDeleteHandler -->> Requester : HTTP Error Response
    else Delete Account Succeeded
        DeleteService -->> AccountDeleteHandler : nil
        AccountDeleteHandler -->> Requester : HTTP 200 OK (Message: Account Deleted)
    end
    deactivate DeleteService
end
deactivate AccountDeleteHandler

deactivate Requester
@enduml
@startuml
title Update Client - PUT /clients/:client_id

actor Requester
boundary ClientPutHandler <<clientHandler.go>>
control AuthorizeService <<serviceAuthorize.go>>
control ClientService <<serviceClient.go>>
entity ClientFirestore <<model/client/firestore.go>>

activate Requester
Requester -> ClientPutHandler : PUT /clients/:client_id (Body: ClientRequest Info)
activate ClientPutHandler

ClientPutHandler -> AuthorizeService : Authorize(Cookie)
activate AuthorizeService
AuthorizeService -->> ClientPutHandler : Claims / Error
deactivate AuthorizeService

alt Authorization Failed
    ClientPutHandler -->> Requester : HTTP Error Response
else Authorization Succeeded
    ClientPutHandler -> ClientService : UpdateClient(clientRequest with Client_id from path)
    activate ClientService
    ClientService -> ClientService : Client(clientRequest.Client_id)
    ClientService -> ClientFirestore : Get(&clientRequest.Client_id)
    activate ClientFirestore
    ClientFirestore -->> ClientService : existingClientData / Error
    deactivate ClientFirestore
    
    alt Get Existing Client Failed
        ClientService -->> ClientService : Error
        ClientService -->> ClientPutHandler : Error
        ClientPutHandler -->> Requester : HTTP Error Response
    else Get Existing Client Succeeded
        ClientService -->> ClientService : clientResponse (existing data)
        note right of ClientService : Updates fields in clientResponse if provided in clientRequest
        ClientService -> ClientFirestore : Update(updatedClientResponseAsRequest) ' ClientFirestore.Update expects *ClientRequest
        activate ClientFirestore
        ClientFirestore -->> ClientService : nil / Error
        deactivate ClientFirestore
        
        alt Update Client Record Failed
            ClientService -->> ClientPutHandler : Error
            ClientPutHandler -->> Requester : HTTP Error Response
        else Update Client Record Succeeded
            ClientService -> ClientService : Client(clientRequest.Client_id) 'Re-fetch updated
            ClientService -> ClientFirestore : Get(&clientRequest.Client_id)
            activate ClientFirestore
            ClientFirestore -->> ClientService : finalClientData / Error
            deactivate ClientFirestore
            
            alt Re-fetch Failed
                 ClientService -->> ClientService : Error
                 ClientService -->> ClientPutHandler : Error
                 ClientPutHandler -->> Requester : HTTP Error Response
            else Re-fetch Succeeded
                 ClientService -->> ClientService : finalClientResponse
                 ClientService -->> ClientPutHandler : finalClientResponse
                 
                 ClientPutHandler -->> Requester : HTTP 200 OK (finalClientResponse)
            end
            deactivate ClientService
        end
    end
end
deactivate ClientPutHandler
deactivate Requester
@enduml